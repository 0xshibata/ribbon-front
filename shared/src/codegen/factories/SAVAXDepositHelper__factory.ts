/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  SAVAXDepositHelper,
  SAVAXDepositHelperInterface,
} from "../SAVAXDepositHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sAVAX",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sAVAXVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sAVAX",
    outputs: [
      {
        internalType: "contract ISAVAX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sAVAXVault",
    outputs: [
      {
        internalType: "contract IRibbonVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class SAVAXDepositHelper__factory {
  static readonly abi = _abi;
  static createInterface(): SAVAXDepositHelperInterface {
    return new utils.Interface(_abi) as SAVAXDepositHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SAVAXDepositHelper {
    return new Contract(address, _abi, signerOrProvider) as SAVAXDepositHelper;
  }
}
